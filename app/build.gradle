plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.example.marvelheroes'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.marvelheroes"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "MARVEL_URL", "\"" + "https://gateway.marvel.com" + "\""
            buildConfigField "String", "PUBLIC_KEY_MARVEL", "\"" + "853f44e003e2d58e82c205144d2ff349" + "\""
            buildConfigField "String", "PRIVATE_KEY_MARVEL", "\"" + "2b5109d6665411aab1e6dc7b266de14cc96f49c4" + "\""
        }
        release {
            buildConfigField "String", "PUBLIC_KEY_MARVEL", "\"" + "853f44e003e2d58e82c205144d2ff349" + "\""
            buildConfigField "String", "PRIVATE_KEY_MARVEL", "\"" + "2b5109d6665411aab1e6dc7b266de14cc96f49c4" + "\""
            buildConfigField "String", "MARVEL_URL", "\"" + "https://gateway.marvel.com" + "\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.4.0"
        kotlinCompilerVersion '1.4.30'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.1.0-alpha05'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.core:core-ktx:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.2"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"

    // Coil
    implementation "io.coil-kt:coil:2.2.2"
    implementation "com.google.accompanist:accompanist-coil:0.7.0"
    implementation "io.coil-kt:coil-compose:2.2.2"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0-alpha01'

    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockito_version"
    // Dependência do Mockito para testes no Android
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    // Dependência do Mockito para ser possível mockar classes e métodos constantes
    testImplementation "org.mockito:mockito-inline:$mockito_version"
}